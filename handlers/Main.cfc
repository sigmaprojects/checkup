component output="false" singleton{	// Default Action	function index(event,rc,prc){		prc.welcomeMessage = "Welcome to ColdBox!";		event.setView("main/index");	}		function test(event,rc,prc){		machineName = createObject("java", "java.net.InetAddress").localhost.getCanonicalHostName();		hostaddress = createObject("java", "java.net.InetAddress").localhost.getHostAddress();		writedump(machineName);		writedump(hostaddress);		abort;
	}	public string function getMacAddress() {		var LocalHost = CreateObject( "java", "java.net.InetAddress" ).getLocalHost();		var HWA = CreateObject( "java", "java.net.NetworkInterface" ).getByInetAddress( LocalHost ).getHardWareAddress();//writedump(arrayLen(hwa));abort;		var mac = "";		var cheat = javaCast("java.lang.String","");		for(var i=1; i lte arrayLen(HWA); i++) {			//mac = cheat.format("%02X%s", javaCast('string',HWA[i]), (i < arrayLen(HWA) - 1) ? "-" : "");			var objArr = javaCast("java.lang.Object[]", [HWA[i],(i < arrayLen(HWA)) ? "-" : ""] );			//writedump(objArr);			//abort;			//mac = mac & cheat.format("%02X%s", [HWA[i]], [(i < arrayLen(HWA) - 1) ? "-" : ""]);			mac = mac & cheat.format("%02X%s", objArr);			writedump( HWA[i] );		}		return mac;	}	/************************************** IMPLICIT ACTIONS *********************************************/	function onAppInit(event,rc,prc){	}	function onRequestStart(event,rc,prc){	}	function onRequestEnd(event,rc,prc){	}	function onSessionStart(event,rc,prc){	}	function onSessionEnd(event,rc,prc){		var sessionScope = event.getValue("sessionReference");		var applicationScope = event.getValue("applicationReference");	}	function onException(event,rc,prc){		//Grab Exception From private request collection, placed by ColdBox Exception Handling		var exception = prc.exception;		//Place exception handler below:	}	function onMissingTemplate(event,rc,prc){		//Grab missingTemplate From request collection, placed by ColdBox		var missingTemplate = event.getValue("missingTemplate");	}}